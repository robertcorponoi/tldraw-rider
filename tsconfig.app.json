{
	/**
	 * The TypeScript configuration used by the app.
	 */
	"compilerOptions": {
		/**
		 * Specifies a file for storing incremental compilation information
		 * as part of composite projects which enables faster building of
		 * larger TypeScript codebases.
		 *
		 * https://www.typescriptlang.org/tsconfig/#tsBuildInfoFile
		 */
		"tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
		/**
		 * Changes which JS features are downleveled and which are left intact.
		 *
		 * https://www.typescriptlang.org/tsconfig/#target
		 */
		"target": "ES2020",
		/**
		 * Use ECMA classes instead of TypeScript classes.
		 *
		 * https://www.typescriptlang.org/tsconfig/#useDefineForClassFields
		 */
		"useDefineForClassFields": true,
		/**
		 * The libraries to include.
		 *
		 * https://www.typescriptlang.org/tsconfig/#lib
		 */
		"lib": ["ES2020", "DOM", "DOM.Iterable"],
		/**
		 * Sets the module system for the program.
		 *
		 * https://www.typescriptlang.org/tsconfig/#module
		 */
		"module": "ESNext",
		/**
		 * Skips type checking of declaration files.
		 *
		 * https://www.typescriptlang.org/tsconfig/#skipLibCheck
		 */
		"skipLibCheck": true,

		/* Bundler mode */
		/**
		 * Specifies the module resolution strategy.
		 *
		 * https://www.typescriptlang.org/tsconfig/#moduleResolution
		 */
		"moduleResolution": "bundler",
		/**
		 * Allows TypeScript files to import each other with a TypeScript
		 * specific extension, like `.ts`, `.mts`, or `.tsx`.
		 *
		 * https://www.typescriptlang.org/tsconfig/#allowImportingTsExtensions
		 */
		"allowImportingTsExtensions": true,
		/**
		 * Warns us if code can't be correctly interpreted by a single-file
		 * transpilation process.
		 *
		 * https://www.typescriptlang.org/tsconfig/#isolatedModules
		 */
		"isolatedModules": true,
		/**
		 * Ensures every non-declaration file is treated as a module.
		 *
		 * https://www.typescriptlang.org/tsconfig/#moduleDetection
		 */
		"moduleDetection": "force",
		/**
		 * Do not emit compiler output files like JavaScript source code,
		 * source maps, or declarations.
		 *
		 * https://www.typescriptlang.org/tsconfig/#noEmit
		 */
		"noEmit": true,
		/**
		 * Emits `.js` files with the JSX changed to `_jsx` calls optimized
		 * for production.
		 *
		 * https://www.typescriptlang.org/tsconfig/#jsx
		 */
		"jsx": "react-jsx",

		/* Linting */
		/**
		 * Enables a wide range of type checking behavior that results in
		 * stronger guarantees of program correctness.
		 *
		 * https://www.typescriptlang.org/tsconfig/#strict
		 */
		"strict": true,
		/**
		 * Reports errors on unused local variables.
		 *
		 * https://www.typescriptlang.org/tsconfig/#noUnusedLocals
		 */
		"noUnusedLocals": true,
		/**
		 * Reports errors on unused parameters in functions.
		 *
		 * https://www.typescriptlang.org/tsconfig/#noUnusedParameters
		 */
		"noUnusedParameters": true,
		/**
		 * Reports errors for fallthrough cases in switch statements. Ensures
		 * that any non-empty case inside a switch statement includes either
		 * `break`, `return`, or `throw`.
		 *
		 * https://www.typescriptlang.org/tsconfig/#noFallthroughCasesInSwitch
		 */
		"noFallthroughCasesInSwitch": true,
		/**
		 * Checks modules that are imported without without any values
		 * actually being imported from it.
		 *
		 * https://www.typescriptlang.org/tsconfig/#noUncheckedSideEffectImports
		 */
		"noUncheckedSideEffectImports": true
	},
	"include": ["src"]
}
